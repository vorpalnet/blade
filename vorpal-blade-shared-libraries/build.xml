<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="vorpal-blade-shared-libraries">
	<!-- Define unique locations first -->
	<property name="webapp" location="./target/${ant.project.name}" />

	<!-- Load environment variables -->
	<property environment="env" />
	<property environment="envvar" />
	<exec executable="hostname" outputproperty="computer.hostname" />
	<property file="../${computer.hostname}.properties" />
	<property file="../build.properties" />
	<property file="../version.properties" />

	<!-- Import default locations and tasks -->
	<import file="../libraries.xml" />

	<target name="build" depends="init, mvn_windows, mvn_unix, package" />

	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<target name="mvn_windows" if="isWindows" depends="init">
		<exec dir="." executable="cmd">
			<arg line="/c mvn clean package" />
		</exec>
	</target>

	<target name="mvn_unix" if="isUnix" depends="init">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn clean package'" />
		</exec>
	</target>


	<target name="package" depends="init">

		<!-- MAVEN will do this	
		<echo message="build=${build}" />
		<echo message="BLADE=${BLADE}" />
		<echo message="specification=${specification}" />
		<echo message="implementation=${implementation}" />
		<echo message="MANIFEST=${build}/MANIFEST.MF" />

		<manifest file="${build}/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Specification-Title" value="Vorpal:BLADE Framework" />
			<attribute name="Specification-Version" value="${specification}" />
			<attribute name="Specification-Vendor" value="VORPAL.ORG" />
			<attribute name="Implementation-Title" value="Vorpal:BLADE Framework Implementation" />
			<attribute name="Implementation-Version" value="${implementation}" />
			<attribute name="Implementation-Vendor" value="Vorpal Networks, LLC" />
			<attribute name="Extension-Name" value="vorpal-blade" />
		</manifest>

		<war destfile="${build}/${ant.project.name}.war" basedir="${webapp}" needxmlfile="false" manifest="${build}/MANIFEST.MF">
			<classes dir="${classes}" />
		</war>
-->

		<copy file="${build}/${ant.project.name}.war" todir="${dist}" />


	</target>


</project>

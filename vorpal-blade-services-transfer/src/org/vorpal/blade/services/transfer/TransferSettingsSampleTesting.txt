package org.vorpal.blade.services.transfer;

import java.util.List;

import org.vorpal.blade.framework.v2.config.ConfigHashMap;
import org.vorpal.blade.framework.v2.config.ConfigPrefixMap;
import org.vorpal.blade.framework.v2.config.SessionParametersDefault;
import org.vorpal.blade.framework.v2.config.TranslationsMap;
import org.vorpal.blade.framework.v2.logging.LogParameters.LoggingLevel;
import org.vorpal.blade.framework.v2.logging.LogParametersDefault;
import org.vorpal.blade.framework.v3.config.AttributeSelector;
import org.vorpal.blade.framework.v3.config.AttributeSelector.DialogType;

public class TransferSettingsSampleTesting extends TransferSettings {

	private static final long serialVersionUID = 1L;

	public TransferSettingsSampleTesting() {
		this.logging = new LogParametersDefault();
		this.logging.setLoggingLevel(LoggingLevel.FINER);

		this.session = new SessionParametersDefault();
		this.getSession().setExpiration(900);

		this.conferenceApp = "sip:conference-sems";
		this.transferAllRequests = true;
		this.defaultTransferStyle = TransferStyle.blind;

		List<AttributeSelector> indexKeySelectors = this.getSession().getSessionSelectors();

		AttributeSelector dialed = new AttributeSelector();
		dialed.setId("inbound");
		dialed.setDescription("Use From user as session key, mark inbound calltype as caller");
		dialed.setAttribute("From");
		dialed.setPattern(SIP_ADDRESS_PATTERN);
//		inbound.setExpression("inbound");
		dialed.setDialog(DialogType.origin);
		dialed.addAdditionalExpression("direction", "inbound");
		indexKeySelectors.add(dialed);

		TranslationsMap prefixMap = new ConfigPrefixMap();
		prefixMap.id = "prefix-map";
		prefixMap.addSelector(dialed);
		prefixMap.description = "Translations map for dialed number prefixes";

		prefixMap.createTranslation("bob").setId("bob").addAttribute("style", "blind");

		prefixMap.createTranslation("1897").setId("t1").addAttribute("style",
				TransferSettings.TransferStyle.blind.toString());
		prefixMap.createTranslation("18974388687").setId("t2").addAttribute("style",
				TransferSettings.TransferStyle.attended.toString());
		prefixMap.createTranslation("18974388689").setId("t3").addAttribute("style",
				TransferSettings.TransferStyle.conference.toString());

		TranslationsMap hashMap = new ConfigHashMap();
		hashMap.id = "hash-map";
		hashMap.addSelector(dialed);
		hashMap.description = "Translations map for account names";
		hashMap.createTranslation("bob").addAttribute("style", TransferSettings.TransferStyle.blind.toString());

		this.maps.add(prefixMap);
		this.maps.add(hashMap);
		this.plan.add(prefixMap);
		this.plan.add(hashMap);

	}

}
